{"__symbolic":"module","version":4,"metadata":{"AdminModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":50,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":52,"character":4},{"__symbolic":"reference","module":"@gngt/core/admin","name":"GngtAdminModule","line":52,"character":26},{"__symbolic":"reference","module":"@gngt/core/common","name":"CommonModule","line":52,"character":44},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":52,"character":65},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":53,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":53,"character":26},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":53,"character":44},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":53,"character":65},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":54,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":54,"character":26},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":54,"character":44},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":54,"character":65},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":55,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":55,"character":26},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":55,"character":44},{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSortModule","line":55,"character":65},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":56,"character":4},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":56,"character":26},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":56,"character":44},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":56,"character":65},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":57,"character":4}],"declarations":[{"__symbolic":"reference","name":"AdminDeleteConfirmDialogComponent"},{"__symbolic":"reference","name":"AdminEditComponent"},{"__symbolic":"reference","name":"AdminListCellDirective"},{"__symbolic":"reference","name":"AdminListComponent"}],"exports":[{"__symbolic":"reference","name":"AdminEditComponent"},{"__symbolic":"reference","name":"AdminListCellDirective"},{"__symbolic":"reference","name":"AdminListComponent"}],"entryComponents":[{"__symbolic":"reference","name":"AdminDeleteConfirmDialogComponent"}],"providers":[{"__symbolic":"reference","name":"AdminUserInteractionsService"}]}]}],"members":{}},"AdminUserInteractionsService":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@gngt/core/admin","name":"AdminUserInteractionsService","line":29,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":28,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":30,"character":31}]}],"askDeleteConfirm":[{"__symbolic":"method"}]}},"AdminDeleteConfirmDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"gngt-admin-delete-confirm","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":27,"character":19},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":28,"character":17},"member":"None"},"template":"<h2 mat-dialog-title>{{ 'Confirm' | translate }}</h2>\n<mat-dialog-content>\n  {{ 'Are you sure you want to delete?' | translate }}\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button mat-dialog-close>{{ 'No' | translate }}</button>\n  <button mat-button [mat-dialog-close]=\"true\">{{ 'Yes' | translate }}</button>\n</mat-dialog-actions>\n","styles":["\n"]}]}],"members":{}},"AdminEditComponent":{"__symbolic":"class","arity":3,"extends":{"__symbolic":"reference","module":"@gngt/core/admin","name":"AdminEditComponent","line":43,"character":53},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"gngt-admin-edit","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":38,"character":19},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":39,"character":17},"member":"None"},"template":"<mat-card *ngIf=\"form|async as editForm\">\n  <div *ngIf=\"title\" mat-card-title>\n    <h2>{{ title }}</h2>\n    <span *ngIf=\"editForm!.value.id\">#{{ editForm!.value.id }}</span>\n  </div>\n  <mat-card-content>\n    <form [formGroup]=\"editForm!\" [gngtFormDisabled]=\"(loading|async) === true\">\n      <ng-content select=\"[gngtAdminEditFormHeader]\"></ng-content>\n      <ng-container *ngFor=\"let field of fields\">\n        <div *ngIf=\"!field.hidden\">\n          <ng-container [ngSwitch]=\"field.type\">\n            <mat-form-field *ngSwitchCase=\"'input'\">\n              <input matInput [formControlName]=\"field.name\" [type]=\"field.subtype || 'text'\"\n                  [placeholder]=\"field.label | translate\" [readonly]=\"field.readonly\">\n            </mat-form-field>\n            <mat-form-field *ngSwitchCase=\"'textarea'\">\n              <textarea matInput [formControlName]=\"field.name\" [placeholder]=\"field.label | translate\"></textarea>\n            </mat-form-field>\n            <div *ngSwitchCase=\"'checkbox'\">\n              <mat-checkbox [formControlName]=\"field.name\">{{ field.label | translate }}</mat-checkbox>\n            </div>\n            <mat-radio-group *ngSwitchCase=\"'radio'\" [formControlName]=\"field.name\">\n              <label class=\"mat-form-field-label\">{{ field.label | translate }}</label>\n              <mat-radio-button *ngFor=\"let choice of field.choices|gngtChoices\"\n                  [value]=\"choice.value\">{{ choice.label | translate }}</mat-radio-button>\n            </mat-radio-group>\n            <mat-form-field *ngSwitchCase=\"'select'\">\n              <mat-select [placeholder]=\"field.label | translate\" [formControlName]=\"field.name\">\n                <mat-option *ngFor=\"let choice of field.choices|gngtChoices\"\n                    [value]=\"choice.value\">{{ choice.label | translate }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field *ngSwitchCase=\"'multipleselect'\">\n              <mat-select [placeholder]=\"field.label | translate\" [formControlName]=\"field.name\" multiple>\n                <mat-option *ngFor=\"let choice of field.choices|gngtChoices\"\n                    [value]=\"choice.value\">{{ choice.label | translate }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field *ngSwitchCase=\"'autocomplete'\">\n              <input matInput [formControlName]=\"field.name\" type=\"text\"\n                  [placeholder]=\"field.label | translate\" [readonly]=\"field.readonly\"\n                  [matAutocomplete]=\"auto\">\n              <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of field.choices|gngtChoices\"\n                    [value]=\"option.value\">{{ option.label | translate }}</mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n          </ng-container>\n        </div>\n      </ng-container>\n      <ng-content select=\"[gngtAdminEditFormFooter]\"></ng-content>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button *ngIf=\"!hideSaveButton\" (click)=\"save()\" [disabled]=\"(canSave === false) || !(editForm!.valid)\"\n        mat-raised-button color=\"primary\">{{ saveLabel | translate }}</button>\n    <button (click)=\"goBack()\" mat-raised-button color=\"warn\">{{ cancelLabel | translate }}</button>\n  </mat-card-actions>\n  <mat-card-footer>\n    <mat-progress-bar *ngIf=\"loading|async\" mode=\"indeterminate\"></mat-progress-bar>\n  </mat-card-footer>\n</mat-card>\n","styles":["gngt-admin-edit{display:block}gngt-admin-edit>.mat-card>[mat-card-title]{display:flex;align-items:center}gngt-admin-edit>.mat-card>[mat-card-title]>h2{flex:1 0 auto;margin:0}gngt-admin-edit>.mat-card>.mat-card-actions{text-align:right}gngt-admin-edit>.mat-card mat-radio-group{display:block;position:relative;padding:.4375em 0;border-top:.84375em solid transparent}gngt-admin-edit>.mat-card mat-radio-group>label{display:block;top:-0.84375em;transform:scale(0.75) perspective(100px) translateZ(0.001px)}gngt-admin-edit>.mat-card mat-radio-group mat-radio-button{margin-right:1em}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":44,"character":19},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":44,"character":42},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":44,"character":63}]}]}},"AdminListComponent":{"__symbolic":"class","arity":4,"extends":{"__symbolic":"reference","module":"@gngt/core/admin","name":"AdminListComponent","line":58,"character":4},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":47,"character":1},"arguments":[{"selector":"gngt-admin-list","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":51,"character":19},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":52,"character":17},"member":"None"},"template":"<mat-card>\n  <div mat-card-title>\n    <h2>{{ title }}</h2>\n    <button [routerLink]=\"baseEditUrl + newItemPath\" mat-mini-fab color=\"primary\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </div>\n  <mat-card-content>\n    <mat-toolbar>\n      <div class=\"gngt-actions\">\n        <mat-select #actionSel [disabled]=\"!selection.hasValue()\" [placeholder]=\"'Action' | translate\">\n          <mat-option value=\"delete\">{{ 'Delete' | translate }}</mat-option>\n        </mat-select>\n        <span class=\"gngt-spacer\"></span>\n        <button mat-raised-button [disabled]=\"!actionSel.value\"\n            (click)=\"processAction(actionSel.value)\">{{ 'Apply' | translate }}</button>\n      </div>\n      <span class=\"gngt-filler\"></span>\n      <mat-paginator [pageSizeOptions]=\"[20, 50, 100]\" showFirstLastButtons></mat-paginator>\n    </mat-toolbar>\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td class=\"gngt-select\" mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n      <ng-container *ngFor=\"let header of headers\"\n          [matColumnDef]=\"header.column\">\n          <ng-container *ngIf=\"header.sortable; else notSortable\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\n              <ng-container *ngTemplateOutlet=\"cellTemplatesMap[header.label] ?\n                cellTemplatesMap[header.label] : defaultHeaderCellTemplate;\n                context: {$implicit: header.label | translate}\">\n              </ng-container>\n            </th>\n          </ng-container>\n          <ng-template #notSortable>\n            <th mat-header-cell *matHeaderCellDef>\n              <ng-container *ngTemplateOutlet=\"cellTemplatesMap[header.label] ?\n                cellTemplatesMap[header.label] : defaultHeaderCellTemplate;\n                context: {$implicit: header.label | translate}\">\n              </ng-container>\n            </th>\n          </ng-template>\n          <ng-template #defaultHeaderCellTemplate>\n            {{ header.label | translate }}\n          </ng-template>\n        <td [routerLink]=\"baseEditUrl + element.id\" mat-cell *matCellDef=\"let element\">\n          <ng-container *ngTemplateOutlet=\"cellTemplatesMap[header.column] ?\n            cellTemplatesMap[header.column] : defaultCellTemplate;\n            context: {$implicit: element|gngtGetObjectProperty:header.column, item: element}\">\n          </ng-container>\n          <ng-template #defaultCellTemplate>\n            {{ element|gngtGetObjectProperty:header.column }}\n          </ng-template>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","styles":["gngt-admin-list{display:block}gngt-admin-list>.mat-card>[mat-card-title]{display:flex;align-items:center}gngt-admin-list>.mat-card>[mat-card-title]>h2{flex:1 0 auto;margin:0}gngt-admin-list>.mat-card>.mat-card-content>.mat-toolbar{margin:1em 0}gngt-admin-list>.mat-card>.mat-card-content>.mat-toolbar .gngt-spacer{flex:0 0 .5em}gngt-admin-list>.mat-card>.mat-card-content>.mat-toolbar .gngt-filler{flex:1 1 auto}gngt-admin-list>.mat-card>.mat-card-content>.mat-toolbar .mat-paginator{background:transparent}gngt-admin-list>.mat-card>.mat-card-content>.mat-toolbar .gngt-actions{display:flex;align-items:center}gngt-admin-list>.mat-card>.mat-card-content>.mat-toolbar .gngt-actions>*{flex-shrink:0}gngt-admin-list>.mat-card>.mat-card-content table{width:100%}gngt-admin-list>.mat-card>.mat-card-content table td:not(.gngt-select){cursor:pointer}\n"]}]}],"members":{"dataSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"paginatorCmp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":70,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginator","line":70,"character":13}]}]}],"sortCmp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":71,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSort","line":71,"character":13}]}]}],"actionSel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":72,"character":3},"arguments":["actionSel",{"read":{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelect","line":72,"character":33}}]}]}],"cellTemplates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren","line":74,"character":3},"arguments":[{"__symbolic":"reference","name":"AdminListCellDirective"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":82,"character":19},{"__symbolic":"reference","name":"AdminUserInteractionsService"}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"getSelection":[{"__symbolic":"method"}],"getItems":[{"__symbolic":"method"}],"clearSelection":[{"__symbolic":"method"}],"selectAll":[{"__symbolic":"method"}],"refreshList":[{"__symbolic":"method"}],"_fillDataSource":[{"__symbolic":"method"}]}},"AdminListCellDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":23,"character":1},"arguments":[{"selector":"[gngtAdminListCell]"}]}],"members":{"column":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3},"arguments":["gngtAdminListCell"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"TemplateRef","module":"@angular/core","arguments":[{"__symbolic":"reference","name":"any"}]}]}]}}},"origins":{"AdminModule":"./admin-module","AdminUserInteractionsService":"./admin-user-interactions","AdminDeleteConfirmDialogComponent":"./delete-confirm","AdminEditComponent":"./edit","AdminListComponent":"./list","AdminListCellDirective":"./list-cell"},"importAs":"@gngt/material/admin"}