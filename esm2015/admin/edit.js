/**
 * @license
 * Copyright (C) Gnucoop soc. coop.
 *
 * This file is part of the Gnucoop Angular Toolkit (gngt).
 *
 * Gnucoop Angular Toolkit (gngt) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Gnucoop Angular Toolkit (gngt) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Gnucoop Angular Toolkit (gngt).  If not, see http://www.gnu.org/licenses/.
 *
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AdminEditComponent as BaseAdminEditComponent } from '@gngt/core/admin';
export class AdminEditComponent extends BaseAdminEditComponent {
    constructor(cdr, fb, router) {
        super(cdr, fb, router);
    }
}
AdminEditComponent.decorators = [
    { type: Component, args: [{
                selector: 'gngt-admin-edit',
                template: "<mat-card *ngIf=\"form|async as editForm\">\n  <div *ngIf=\"title\" mat-card-title>\n    <h2>{{ title }}</h2>\n    <span *ngIf=\"editForm!.value.id\">#{{ editForm!.value.id }}</span>\n  </div>\n  <mat-card-content>\n    <form [formGroup]=\"editForm!\" [gngtFormDisabled]=\"(loading|async) === true\">\n      <ng-content select=\"[gngtAdminEditFormHeader]\"></ng-content>\n      <ng-container *ngFor=\"let field of fields\">\n        <div *ngIf=\"!field.hidden\">\n          <ng-container [ngSwitch]=\"field.type\">\n            <mat-form-field *ngSwitchCase=\"'input'\">\n              <input matInput [formControlName]=\"field.name\" [type]=\"field.subtype || 'text'\"\n                  [placeholder]=\"field.label | translate\" [readonly]=\"field.readonly\">\n            </mat-form-field>\n            <mat-form-field *ngSwitchCase=\"'textarea'\">\n              <textarea matInput [formControlName]=\"field.name\" [placeholder]=\"field.label | translate\"></textarea>\n            </mat-form-field>\n            <div *ngSwitchCase=\"'checkbox'\">\n              <mat-checkbox [formControlName]=\"field.name\">{{ field.label | translate }}</mat-checkbox>\n            </div>\n            <mat-radio-group *ngSwitchCase=\"'radio'\" [formControlName]=\"field.name\">\n              <label class=\"mat-form-field-label\">{{ field.label | translate }}</label>\n              <mat-radio-button *ngFor=\"let choice of field.choices|gngtChoices\"\n                  [value]=\"choice.value\">{{ choice.label | translate }}</mat-radio-button>\n            </mat-radio-group>\n            <mat-form-field *ngSwitchCase=\"'select'\">\n              <mat-select [placeholder]=\"field.label | translate\" [formControlName]=\"field.name\">\n                <mat-option *ngFor=\"let choice of field.choices|gngtChoices\"\n                    [value]=\"choice.value\">{{ choice.label | translate }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field *ngSwitchCase=\"'multipleselect'\">\n              <mat-select [placeholder]=\"field.label | translate\" [formControlName]=\"field.name\" multiple>\n                <mat-option *ngFor=\"let choice of field.choices|gngtChoices\"\n                    [value]=\"choice.value\">{{ choice.label | translate }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field *ngSwitchCase=\"'autocomplete'\">\n              <input matInput [formControlName]=\"field.name\" type=\"text\"\n                  [placeholder]=\"field.label | translate\" [readonly]=\"field.readonly\"\n                  [matAutocomplete]=\"auto\">\n              <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of field.choices|gngtChoices\"\n                    [value]=\"option.value\">{{ option.label | translate }}</mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n          </ng-container>\n        </div>\n      </ng-container>\n      <ng-content select=\"[gngtAdminEditFormFooter]\"></ng-content>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button *ngIf=\"!hideSaveButton\" (click)=\"save()\" [disabled]=\"(canSave === false) || !(editForm!.valid)\"\n        mat-raised-button color=\"primary\">{{ saveLabel | translate }}</button>\n    <button (click)=\"goBack()\" mat-raised-button color=\"warn\">{{ cancelLabel | translate }}</button>\n  </mat-card-actions>\n  <mat-card-footer>\n    <mat-progress-bar *ngIf=\"loading|async\" mode=\"indeterminate\"></mat-progress-bar>\n  </mat-card-footer>\n</mat-card>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                styles: ["gngt-admin-edit{display:block}gngt-admin-edit>.mat-card>[mat-card-title]{display:flex;align-items:center}gngt-admin-edit>.mat-card>[mat-card-title]>h2{flex:1 0 auto;margin:0}gngt-admin-edit>.mat-card>.mat-card-actions{text-align:right}gngt-admin-edit>.mat-card mat-radio-group{display:block;position:relative;padding:.4375em 0;border-top:.84375em solid transparent}gngt-admin-edit>.mat-card mat-radio-group>label{display:block;top:-0.84375em;transform:scale(0.75) perspective(100px) translateZ(0.001px)}gngt-admin-edit>.mat-card mat-radio-group mat-radio-button{margin-right:1em}\n"]
            },] }
];
AdminEditComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: FormBuilder },
    { type: Router }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYXRlcmlhbC9hZG1pbi9lZGl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJHO0FBR0gsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxrQkFBa0IsSUFBSSxzQkFBc0IsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBVzlFLE1BQU0sT0FBTyxrQkFFZ0MsU0FBUSxzQkFBK0I7SUFDbEYsWUFBWSxHQUFzQixFQUFFLEVBQWUsRUFBRSxNQUFjO1FBQ2pFLEtBQUssQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3pCLENBQUM7OztZQVpGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixxaUhBQXdCO2dCQUV4QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O2FBQ3RDOzs7WUFoQkMsaUJBQWlCO1lBSVgsV0FBVztZQUNYLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKEMpIEdudWNvb3Agc29jLiBjb29wLlxuICpcbiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHbnVjb29wIEFuZ3VsYXIgVG9vbGtpdCAoZ25ndCkuXG4gKlxuICogR251Y29vcCBBbmd1bGFyIFRvb2xraXQgKGduZ3QpIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBHbnVjb29wIEFuZ3VsYXIgVG9vbGtpdCAoZ25ndCkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIEdudWNvb3AgQW5ndWxhciBUb29sa2l0IChnbmd0KS4gIElmIG5vdCwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8uXG4gKlxuICovXG5cbmltcG9ydCB7Qm9vbGVhbklucHV0fSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQnVpbGRlcn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge0FkbWluRWRpdENvbXBvbmVudCBhcyBCYXNlQWRtaW5FZGl0Q29tcG9uZW50fSBmcm9tICdAZ25ndC9jb3JlL2FkbWluJztcbmltcG9ydCB7TW9kZWx9IGZyb20gJ0Bnbmd0L2NvcmUvY29tbW9uJztcbmltcG9ydCB7TW9kZWxBY3Rpb25UeXBlcywgU3RhdGUgYXMgTW9kZWxTdGF0ZX0gZnJvbSAnQGduZ3QvY29yZS9tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2duZ3QtYWRtaW4tZWRpdCcsXG4gIHRlbXBsYXRlVXJsOiAnZWRpdC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ2VkaXQuY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBBZG1pbkVkaXRDb21wb25lbnQ8XG4gICAgVCBleHRlbmRzIE1vZGVsID0gTW9kZWwsIFMgZXh0ZW5kcyBNb2RlbFN0YXRlPFQ+ID0gTW9kZWxTdGF0ZTxUPiwgQSBleHRlbmRzXG4gICAgICAgIE1vZGVsQWN0aW9uVHlwZXMgPSBNb2RlbEFjdGlvblR5cGVzPiBleHRlbmRzIEJhc2VBZG1pbkVkaXRDb21wb25lbnQ8VCwgUywgQT4ge1xuICBjb25zdHJ1Y3RvcihjZHI6IENoYW5nZURldGVjdG9yUmVmLCBmYjogRm9ybUJ1aWxkZXIsIHJvdXRlcjogUm91dGVyKSB7XG4gICAgc3VwZXIoY2RyLCBmYiwgcm91dGVyKTtcbiAgfVxuXG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9jYW5TYXZlOiBCb29sZWFuSW5wdXQ7XG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9oaWRlU2F2ZUJ1dHRvbjogQm9vbGVhbklucHV0O1xuICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfcmVhZG9ubHk6IEJvb2xlYW5JbnB1dDtcbn1cbiJdfQ==